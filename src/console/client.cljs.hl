(ns console.client
  (:require
    [cljs.reader :as reader]
    [simpleArk.uuid :as suuid]
    [simpleArk.miView :as miView]
    [simpleArk.miMap :as miMap]
    [simpleArk.rolonRecord :as rolonRecord]
    [simpleArk.arkRecord :as arkRecord]
    [tiples.login :as login]
    [tiples.client :as tiples]))

(defc= my-ark-record
       (if login/common-data
         (:console login/common-data)
         nil)
       (partial swap! login/common-data assoc :console))

(defn je-count [ark-record]
  (if ark-record
    (str "journal entry count: " (count (arkRecord/get-journal-entries ark-record)))
    ""))

(defn indexes-count [ark-record]
  (if ark-record
    (str "indexes count: " (count (arkRecord/get-indexes ark-record)))
    ""))

(defn application-rolons-count [ark-record]
  (if ark-record
    (str "application rolons count: " (count (arkRecord/get-application-rolons ark-record)))
    ""))

(def do-console
  (div
    (h2 "Ark Console")
    (p (text (je-count my-ark-record)))
    (p (text (indexes-count my-ark-record)))
    (p (text (application-rolons-count my-ark-record)))
    (button
      :click #(tiples/chsk-send! [:console/process-transaction {:tran-keyword :hello-world! :tran-data "Fred"}])
      "Hello Fred")
    ))

(defmethod login/add-element :console [_] (do-console))

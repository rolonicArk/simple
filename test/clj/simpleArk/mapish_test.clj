(ns simpleArk.mapish-test
  (:require [clojure.test :refer :all]
            [simpleArk.mapish :as mapish]
            [simpleArk.vecish :refer [->Vecish]]))

(set! *warn-on-reflection* true)

(def sm0 (sorted-map (->Vecish [:a]) 1
                     (->Vecish [:b]) 2
                     (->Vecish [:e]) 10
                     (->Vecish [:f]) 11))
(def mi0 (mapish/->MI-map sm0 nil nil nil nil))
(def mi1 (mapish/->MI-map sm0 >= (->Vecish [:b]) <= (->Vecish [:e])))
(def mi2 (mapish/->MI-map sm0 > (->Vecish [:a]) < (->Vecish [:f])))

(deftest mapish
  (println sm0)
  (println mi0)
  (println (mapish/mi-seq mi0))
  (println (mapish/mi-seq mi1))
  (println (mapish/mi-seq mi2))
  (println (mapish/mi-seq (mapish/mi-assoc mi0 (->Vecish [:c]) 3)))
  (println (mapish/mi-seq (mapish/mi-assoc mi1 (->Vecish [:c]) 3)))
  (println (mapish/mi-seq (mapish/mi-assoc mi0 (->Vecish [:a]) 1)))
  (println (mapish/mi-seq (mapish/mi-assoc mi0 (->Vecish [:a]) 11)))
  (println (mapish/mi-rseq mi0))
  (println (mapish/mi-rseq mi1))
  (println (mapish/mi-rseq mi2))
  (println (mapish/mi-get mi0 (->Vecish [:a])))
  (println (mapish/mi-get mi1 (->Vecish [:a])))
  (println (mapish/mi-get mi2 (->Vecish [:a])))
  (println (mapish/mi-get mi0 (->Vecish [:b])))
  (println (mapish/mi-get mi1 (->Vecish [:b])))
  (println (mapish/mi-get mi2 (->Vecish [:b])))
  (println (mapish/mi-get mi0 (->Vecish [:c])))
  (println (mapish/mi-get mi0 (->Vecish [:e])))
  (println (mapish/mi-get mi1 (->Vecish [:e])))
  (println (mapish/mi-get mi2 (->Vecish [:e])))
  (println (mapish/mi-get mi0 (->Vecish [:f])))
  (println (mapish/mi-get mi1 (->Vecish [:f])))
  (println (mapish/mi-get mi2 (->Vecish [:f])))
  (println (mapish/mi-get mi0 (->Vecish [:a]) 22))
  (println (mapish/mi-get mi0 (->Vecish [:c]) 22))
  (println (mapish/mi-seq (mapish/mi-sub mi0 nil nil nil nil)))
  (println (mapish/mi-seq (mapish/mi-sub mi1 nil nil nil nil)))
  (println (mapish/mi-seq (mapish/mi-sub mi0 >= (->Vecish [:a]) <= (->Vecish [:f]))))
  (println (mapish/mi-seq (mapish/mi-sub mi0 > (->Vecish [:a]) < (->Vecish [:f]))))
  (println (mapish/mi-seq (mapish/mi-sub mi0 >= (->Vecish [:b]) <= (->Vecish [:e]))))
  (println (mapish/mi-seq (mapish/mi-sub mi0 > (->Vecish [:b]) < (->Vecish [:e]))))
  (println (mapish/mi-seq (mapish/mi-sub mi1 >= (->Vecish [:a]) <= (->Vecish [:f]))))
  (println (mapish/mi-seq (mapish/mi-sub mi1 > (->Vecish [:a]) < (->Vecish [:f]))))
  (println (mapish/mi-seq (mapish/mi-sub mi1 >= (->Vecish [:b]) <= (->Vecish [:e]))))
  (println (mapish/mi-seq (mapish/mi-sub mi1 > (->Vecish [:b]) < (->Vecish [:e]))))
  (println (mapish/mi-seq (mapish/mi-sub mi2 >= (->Vecish [:a]) <= (->Vecish [:f]))))
  (println (mapish/mi-seq (mapish/mi-sub mi2 > (->Vecish [:a]) < (->Vecish [:f]))))
  (println (mapish/mi-seq (mapish/mi-sub mi2 >= (->Vecish [:b]) <= (->Vecish [:e]))))
  (println (mapish/mi-seq (mapish/mi-sub mi2 > (->Vecish [:b]) < (->Vecish [:e]))))
  )
